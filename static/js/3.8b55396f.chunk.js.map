{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileData","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","className","s","contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","src","photos","large","userPhoto","mainPhoto","type","target","files","length","Post","item","message","likesCount","MyPosts","postsElements","posts","reverse","p","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","newPostText","addPost","MyPostsContainer","connect","state","profilePage","dispatch","action","updateNewPostTextActionCreator","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8b55396f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__18zlr\",\"mainPhoto\":\"ProfileInfo_mainPhoto__19ym8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3gW2N\",\"posts\":\"MyPosts_posts__2brs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3zxHe\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || \"----\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode.bind(this)}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n          />\r\n        }\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = () => {\r\n    props.addPost();\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n            value={props.newPostText}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={onAddPost}>Add post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n  updateNewPostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      let action = updateNewPostTextActionCreator(text);\r\n      dispatch(action);\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}