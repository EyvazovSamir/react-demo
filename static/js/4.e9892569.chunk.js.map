{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","value","onChange","e","body","target","updateNewMessageBody","placeholder","onClick","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","updateNewMessageBodyCreator","Component","RedirectComponent","this","React","module","exports"],"mappings":"yLAaeA,MAVf,SAAoBC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCFjBC,MAJf,SAAiBT,GACf,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,OC8C3BC,EA3CC,SAACX,GACf,IAAIY,EAAQZ,EAAMa,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAuBT,KAAMS,EAAET,KAAMN,GAAIe,EAAEf,IAA1Be,EAAEf,OAEjBgB,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAAoBV,QAASU,EAAEV,SAAjBU,EAAElB,OAEdmB,EAAiBT,EAAMS,eAW3B,OAAKrB,EAAMsB,OAGT,sBAAKnB,UAAWC,IAAEW,QAAlB,UACE,qBAAKZ,UAAWC,IAAEmB,aAAlB,SAAiCT,IACjC,sBAAKX,UAAWC,IAAEe,SAAlB,UACE,8BAAMD,IACN,gCACE,8BACE,0BACEM,MAAOH,EACPI,SAhBa,SAACC,GACxB,IAAIC,EAAOD,EAAEE,OAAOJ,MACpBxB,EAAM6B,qBAAqBF,IAejBG,YAAY,yBAGhB,8BACE,wBAAQC,QAzBO,WACvB/B,EAAMgC,eAwBE,6BAhBgB,cAAC,IAAD,CAAUzB,GAAI,Y,+CCtBtC0B,EAA6B,SAACrB,GAAD,MAAY,CAC3CU,OAAQV,EAAMsB,KAAKZ,S,QCqBNa,sBACbC,aAlBoB,SAACxB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACwB,GACxB,MAAO,CACLL,YAAa,WACXK,EAASC,gBAEXT,qBAAsB,SAACF,GACrBU,EAASE,YAA4BZ,UDbX,SAACa,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAK1C,MAAMsB,OAET,cAACkB,EAAD,eAAeE,KAAK1C,QAFI,cAAC,IAAD,CAAUO,GAAG,eAHH,GACboC,IAAMH,WAYtC,OAJqCJ,YAAQH,EAARG,CACnCK,KCQWN,CAGbxB,I,mBC5BFiC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU","file":"static/js/4.e9892569.chunk.js","sourcesContent":["import s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nfunction Message(props) {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let onSendMessageClick = () => {\r\n    props.sendMessage();\r\n  };\r\n\r\n  let onNewMessageChange = (e) => {\r\n    let body = e.target.value;\r\n    props.updateNewMessageBody(body);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <div>\r\n            <textarea\r\n              value={newMessageBody}\r\n              onChange={onNewMessageChange}\r\n              placeholder=\"Enter your message\"\r\n            ></textarea>\r\n          </div>\r\n          <div>\r\n            <button onClick={onSendMessageClick}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import {\r\n  sendMessageCreator,\r\n  updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: () => {\r\n      dispatch(sendMessageCreator());\r\n    },\r\n    updateNewMessageBody: (body) => {\r\n      dispatch(updateNewMessageBodyCreator(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__32MBX\",\"dialogsItems\":\"Dialogs_dialogsItems__3bnRb\",\"active\":\"Dialogs_active__2KJCa\",\"messages\":\"Dialogs_messages__3BRpa\",\"message\":\"Dialogs_message__3bvgy\"};"],"sourceRoot":""}